--- a/arch/mips/ath79/Kconfig
+++ b/arch/mips/ath79/Kconfig
@@ -123,6 +123,20 @@ config ATH79_MACH_AP151
 	  Say 'Y' here if you want your kernel to support the
 	  Atheros AP151 reference board.
 
+config ATH79_MACH_AP147
+	bool "Atheros AP147 reference board"
+	select SOC_QCA953X
+	select ATH79_DEV_GPIO_BUTTONS
+	select ATH79_DEV_LEDS_GPIO
+	select ATH79_DEV_SPI
+	select ATH79_DEV_USB
+	select ATH79_DEV_WMAC
+	select ATH79_DEV_ETH
+	select ATH79_DEV_M25P80
+	help
+	  Say 'Y' here if you want your kernel to support the
+	  Atheros AP147 reference board.
+
 config ATH79_MACH_AP152
 	bool "Atheros AP152 reference board"
 	select SOC_QCA956X
--- a/arch/mips/ath79/Makefile
+++ b/arch/mips/ath79/Makefile
@@ -50,6 +50,7 @@ obj-$(CONFIG_ATH79_MACH_AP121)		+= mach-
 obj-$(CONFIG_ATH79_MACH_AP135)		+= mach-ap135.o
 obj-$(CONFIG_ATH79_MACH_AP136)		+= mach-ap136.o
 obj-$(CONFIG_ATH79_MACH_AP143)		+= mach-ap143.o
+obj-$(CONFIG_ATH79_MACH_AP147)		+= mach-ap147.o
 obj-$(CONFIG_ATH79_MACH_AP151)		+= mach-ap151.o
 obj-$(CONFIG_ATH79_MACH_AP152)		+= mach-ap152.o
 obj-$(CONFIG_ATH79_MACH_AP81)		+= mach-ap81.o
--- a/arch/mips/ath79/machtypes.h
+++ b/arch/mips/ath79/machtypes.h
@@ -28,6 +28,7 @@ enum ath79_mach_type {
 	ATH79_MACH_AP135,		/* Atheros AP135 reference board */
 	ATH79_MACH_AP136,		/* Atheros AP136 reference board */
 	ATH79_MACH_AP143,		/* Atheros AP143 reference board */
+	ATH79_MACH_AP147,		/* Atheros AP147 reference board */
 	ATH79_MACH_AP151,		/* Atheros AP151 reference board */
 	ATH79_MACH_AP152,		/* Atheros AP152 reference board */
 	ATH79_MACH_AP81,		/* Atheros AP81 reference board */
--- a/arch/mips/ath79/pci.c
+++ b/arch/mips/ath79/pci.c
@@ -68,6 +68,15 @@ static const struct ath79_pci_irq qca955
 	},
 };
 
+static const struct ath79_pci_irq qca953x_pci_irq_map[] __initconst = {
+	{
+		.bus	= 0,
+		.slot	= 0,
+		.pin	= 1,
+		.irq	= ATH79_PCI_IRQ(0),
+	}
+};
+
 static const struct ath79_pci_irq qca956x_pci_irq_map[] __initconst = {
         {
                 .bus    = 0,
@@ -101,6 +110,9 @@ int __init pcibios_map_irq(const struct 
 		} else if (soc_is_qca955x()) {
 			ath79_pci_irq_map = qca955x_pci_irq_map;
 			ath79_pci_nr_irqs = ARRAY_SIZE(qca955x_pci_irq_map);
+		} else if (soc_is_qca953x()) {
+			ath79_pci_irq_map = qca953x_pci_irq_map;
+			ath79_pci_nr_irqs = ARRAY_SIZE(qca953x_pci_irq_map);
 		} else if (soc_is_qca956x()) {
 			ath79_pci_irq_map = qca956x_pci_irq_map;
 			ath79_pci_nr_irqs = ARRAY_SIZE(qca956x_pci_irq_map);
@@ -311,6 +323,15 @@ int __init ath79_register_pci(void)
 						 QCA955X_PCI_MEM_SIZE,
 						 1,
 						 ATH79_IP3_IRQ(2));
+	} else if (soc_is_qca953x()) {
+		pdev = ath79_register_pci_ar724x(0,
+						 QCA953X_PCI_CFG_BASE0,
+						 QCA953X_PCI_CTRL_BASE0,
+						 QCA953X_PCI_CRP_BASE0,
+						 QCA953X_PCI_MEM_BASE0,
+						 QCA953X_PCI_MEM_SIZE,
+						 0,
+						 ATH79_IP2_IRQ(0));
 	} else if (soc_is_qca956x()) {
 		pdev = ath79_register_pci_ar724x(0,
 						 QCA956X_PCI_CFG_BASE1,
--- a/arch/mips/include/asm/mach-ath79/ar71xx_regs.h
+++ b/arch/mips/include/asm/mach-ath79/ar71xx_regs.h
@@ -124,6 +124,12 @@
 #define QCA953X_SRIF_BASE	(AR71XX_APB_BASE + 0x00116000)
 #define QCA953X_SRIF_SIZE	0x1000
 
+#define QCA953X_PCI_CFG_BASE0	0x14000000
+#define QCA953X_PCI_CTRL_BASE0	(AR71XX_APB_BASE + 0x000f0000)
+#define QCA953X_PCI_CRP_BASE0	(AR71XX_APB_BASE + 0x000c0000)
+#define QCA953X_PCI_MEM_BASE0	0x10000000
+#define QCA953X_PCI_MEM_SIZE	0x02000000
+
 #define QCA955X_PCI_MEM_BASE0	0x10000000
 #define QCA955X_PCI_MEM_BASE1	0x12000000
 #define QCA955X_PCI_MEM_SIZE	0x02000000
--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -723,6 +723,9 @@ static const struct spi_device_id m25p_i
 	{ "mx25l25635e", INFO(0xc22019, 0, 64 * 1024, 512, 0) },
 	{ "mx25l25655e", INFO(0xc22619, 0, 64 * 1024, 512, 0) },
 
+	/* Micron */
+	{ "n25q128a11",  INFO(0x20bb18, 0, 64 * 1024, 256, 0) },
+
 	/* PMC -- pm25x "blocks" are 32K, sectors are 4K */
 	{ "pm25lv512", INFO(0, 0, 32 * 1024, 2, SECT_4K_PMC) },
 	{ "pm25lv010", INFO(0, 0, 32 * 1024, 4, SECT_4K_PMC) },
