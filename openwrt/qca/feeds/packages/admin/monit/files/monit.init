#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2012 OpenWrt.org

START=60
SERVICE_USE_PID=1
CONTROL_FILE="/tmp/monitrc"


cfg_append() {
	echo -e "$1" >> $CONTROL_FILE
}

process_add() {
	local cfg="$1"
	local name group cmd_start cmd_stop pidfile

	config_get name $cfg name
	[ -n "$name" ] || return 1

	config_get pidfile $cfg pidfile
	[ -n "$pidfile" ] || return 1

	config_get cmd_start $cfg start
	[ -n "$cmd_start" ] || return 1

	config_get cmd_stop $cfg stop
	[ -n "$cmd_stop" ] || return 1

	cfg_append "check process $name with pidfile $pidfile"
	cfg_append "\tstart program = \"$cmd_start\""
	cfg_append "\tstop program = \"$cmd_stop\""

	config_get group $cfg group
	[ -n "$group" ] &&
		cfg_append "\tgroup $group"

}

create_ctrlfile() {
        local daemon httpdport httpduser httpdnetwork

	config_get daemon config daemon "60"
	config_get httpdport config httpport "2812"
	config_get httpduser config user
	config_get httpdnetwork config network

	echo "# Monit control file generated by UCI configuration" > $CONTROL_FILE
	cfg_append "# Global section"
	cfg_append "set daemon $daemon"
	cfg_append "set httpd port $httpdport"
	cfg_append "\tallow localhost"
	[ -n "$httpduser" ] &&
		cfg_append "\tallow $httpduser"
	[ -n "$httpdnetwork" ] &&
		cfg_append "\tallow $httpdnetwork"

	cfg_append "\n# Services"
	config_foreach process_add process

	cfg_append "\n# Includes"
	cfg_append "include /etc/monit.d/*"
}

start() {
        local disabled

	config_load monit
	config_get disabled config disabled "0"
	[ "$disabled" -eq 0 ] || return 1

	[ -f $CONTROL_FILE ] && return 1
	create_ctrlfile
	[ -f $CONTROL_FILE ] || return 1

	chmod 0700 $CONTROL_FILE
	service_start /usr/bin/monit -c $CONTROL_FILE
}

stop() {
	service_stop /usr/bin/monit
	[ -f $CONTROL_FILE ] && rm -rf $CONTROL_FILE
}

reload() {
	local disabled pid

	config_load monit
	config_get disabled config disabled "0"
	[ "$disabled" -eq 0 ] || return 1

	pid=`cat /tmp/run/monit.pid 2>/dev/null`
	[ -n "$pid" ] || return 1

	create_ctrlfile
	[ -f $CONTROL_FILE ] || return 1

	chmod 0700 $CONTROL_FILE
	kill -HUP "$pid"
}

